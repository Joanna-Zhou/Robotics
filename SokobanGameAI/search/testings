from solution import *
from search import * #for search engines
from sokoban import SokobanState, Direction, PROBLEMS #for Sokoban specific classes and problems

def main():
    ss = SokobanState("START", 0, None, 5, 5, # dimensions
                 ((2, 1), (2, 3)), #robots
                 frozenset(((4, 0), (4, 2), (3, 1), (3, 3))), #boxes
                 frozenset(((0, 0), (0, 4), (4, 0), (4, 4))), #storage
                 frozenset(((1, 0), (2, 0), (3, 0), (1, 4), (2, 4), (3, 4))) #obstacles
                 )
    ss.print_state()
    print(heur_alternate(ss))
    get_astar_distances(ss)

    # print(is_horizontal_adjacent(list(ss.boxes)[0], list(ss.boxes)[1]))
    return


##Temporary storage
def test_inner_func(a, b):
    def inner_func():
        print('a is', a, 'b is', b)
        return a+b
    print('Result is', inner_func())


if __name__ == '__main__':
    main()
    # test_inner_func(1, 2)
